find the node where linked list forms a loop



class Solution(object):
    def compress(self,head):

        slow=fast=head

        while fast and fast.next:
            slow=slow.next
            fast=fast.next.next
            if slow == fast:
                break
        if fast is None or fast.next is None:
            return None


#to find the collision point, place slow pointer back to head and move fast and slow pointers by one step each
        slow=head   
        while slow != fast:
            slow=slow.next
            fast=fast.next

        return fast        

        

 
    # chars = ["a","a","b","b","c","c","c"]   
    
    # chars = "aabbccc"
    # print(compress(chars))       
        
